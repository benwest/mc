@function dashDecimal($n){
  
  @if $n % 1 == 0 {
    @return $n;
  } @else {
    
    $decimal: $n % 1;
    $decimal: floor($decimal * 100);
    
    @while $decimal % 10 == 0 {
      $decimal: $decimal / 10;
    }
    
    @return floor($n)+'-'+$decimal;
  }
  
}

@mixin class-creator($names, $max, $step, $unit){
  
  $steps: 1/$step;
  
  @each $name in $names{
  
    $className: nth($name, 1);
    $property: nth($name, 2);

    @for $i from 0 through $max*$steps {
	    
      .#{$className}-#{dashDecimal($i/$steps)},
      .small-#{$className}-#{dashDecimal($i/$steps)} {
        #{$property}: ($i/$steps) + $unit;
      }
      
	  @media #{$medium-up} {
	      .medium-#{$className}-#{dashDecimal($i/$steps)} {
	        #{$property}: ($i/$steps) + $unit;
	      }
	  }
      
	  @media #{$large-up} {
	      .large-#{$className}-#{dashDecimal($i/$steps)} {
	        #{$property}: ($i/$steps) + $unit;
	      }
	  }
      
	  @media #{$xlarge-up} {
	      .xlarge-#{$className}-#{dashDecimal($i/$steps)} {
	        #{$property}: ($i/$steps) + $unit;
	      }
	  }
      
	  @media #{$xxlarge-up} {
	      .xxlarge-#{$className}-#{dashDecimal($i/$steps)} {
	        #{$property}: ($i/$steps) + $unit;
	      }
	  }
      
    }
  }
}